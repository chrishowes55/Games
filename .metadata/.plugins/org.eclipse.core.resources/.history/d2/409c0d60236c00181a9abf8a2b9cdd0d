package com.liedssna.org.java.main.display;

import java.awt.GridLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

public class Display extends JFrame{
	
	private JPanel normalPane;
	private ArrayList<JButton> buttons = new ArrayList<JButton>();
	private ArrayList<JPanel> panes = new ArrayList<JPanel>();
	
	public Display(String title) {
		super(title);
		setSize(500, 500);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		createPanels();
		setContentPane(normalPane);
	}
	
	private void createPanels() {
		normalPane = new JPanel();
		normalPane.setLayout(new GridLayout(0, 1));
		for (int i = 1; i <= 5; i++) {
			JButton button = new JButton("Level " + i);
			button.addMouseListener(new LevelListener(i));
			buttons.add(button);
			normalPane.add(button);
		}
		
		JPanel panel1 = new JPanel();
		panel1.setLayout(new GridLayout(6, 6));
		String[] rowtitles = new String[5];
		String[] columntitles = new String[5];
		for (int i = 0; i < 5; i++) {
			String line = "";
			if (readPlanLine(1, i) != null) {
				line = readPlanLine(1, i);
				rowtitles[i] = decideRowTitle(line);
			}
		}
		for (int i = 0; i < 5; i++) {
			String column = "";
			if (readPlanColumn(1, i) != null) {
				column = readPlanColumn(1, i);
				rowtitles[i] = decideRowTitle(column);
			}
		}
		panes.add(panel1);
	}
	
	private void switchLevel(int num) {
		remove(normalPane);
		setContentPane(panes.get(num - 1));
		validate();
		repaint();
	}
	
	private String decideRowTitle(String line) {
		int total = 0;
		String ret = "";
		for(int i = 0; i < line.length(); i++) {
			if (line.charAt(i) == 'x') {
				total++;
			} else {
				ret += total + " ";
				total = 0;
			}
		}
		return ret;
	}
	
	private String readPlanLine(int level, int line) {
		BufferedReader br;
		try {
			br = new BufferedReader(new FileReader("assets/levelplans/level" + level + ".txt"));
			for (int i = 0; i < line; i++) {
				br.readLine();
			}
			String thisLine = br.readLine();
			return thisLine;
		} catch (IOException e) {
			e.printStackTrace();
		}
		return null;
	}
	
	private String readPlanColumn(int level, int column) {
		BufferedReader br;
		try {
			br = new BufferedReader(new FileReader("assets/levelplans/level" + level + ".txt"));
			ArrayList<String> lines = new ArrayList<String>();
			String thisLine = null;
			String thisColumn = "";
			while ((thisLine = br.readLine()) != null) {
				lines.add(thisLine);
			}
			for (int i = 0; i < lines.size(); i++) {
				thisColumn += lines.get(i).charAt(column);
			}
			return thisColumn;
		} catch (IOException e) {
			e.printStackTrace();
		}
		return null;
	}
	
	public class LevelListener extends MouseAdapter {
		
		private int num;
		
		public LevelListener(int num) {
			this.num = num;
		}
		
		public void mousePressed(MouseEvent e) {
			if (e.getButton() == MouseEvent.BUTTON1) {
				switchLevel(num);
			}
		}
		
	}

}
